<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Exam" script:language="StarBasic" script:moduleType="normal">REM  *****  BASIC  *****

Sub Main

End Sub

&apos;Neues Makro vom 18.9.18
Sub Aufg_Loeschen
 	Dim igewPos as Integer
 	Dim sSQL as String

	iAbbruch = MsgBox(&quot;Aufgabe wirklich löschen?&quot;,260)
	If iAbbruch = 7 then
		exit sub 
	End If
 
    DatabaseContext = createUnoService(&quot;com.sun.star.sdb.DatabaseContext&quot;)
    DataSource = DatabaseContext.getByName(&quot;aufgdbphys&quot;)
    If Not DataSource.IsPasswordRequired Then
    	Connection = DataSource.GetConnection(&quot;&quot;,&quot;&quot;)
    Else	
    	InteractionHandler = createUnoService(&quot;com.sun.star.sdb.InteractionHandler&quot;)
    	Connection = DataSource.ConnectWithCompletion(InteractionHandler)
    End If
    Statement = Connection.createStatement()

	PositionenZurueckschreiben

 	igewPos = Listbox_auslesen(&quot;PositionListBox&quot;)
 	sSQL = &quot;SELECT &quot;&quot;PermanenteID&quot;&quot; FROM &quot;&quot;Position&quot;&quot; WHERE &quot;&quot;AufgPos&quot;&quot; = &quot; &amp; igewPos
	ResultSet = Statement.executeQuery(sSQL)
	Do While ResultSet.next()
		 sgewID = ResultSet.getString(1)
	loop
	
	Statement1 = Connection.createStatement()
	sSQL = &quot;UPDATE &quot;&quot;Aufgaben&quot;&quot; SET &quot;&quot;Auswahl&quot;&quot; = FALSE WHERE &quot;&quot;PermanenteID&quot;&quot; = &apos;&quot; &amp; sgewID &amp; &quot;&apos;&quot;
	Statement1.executeUpdate(sSQL)
	
	PositionenAusfuellen
	
	if (MsgBox(&quot;Soll die Prüfung neu gespeichert werden?&quot;, 260, &quot;Neue Prüfung&quot;) = 6) then
		 AuswahlSpeichern
	end if
	
End Sub

Sub ExamPdfErstellen &apos;Neu ab 18.9.18
	PositionenZurueckschreiben
	TexDateiErstellenAuswahlExam
End Sub

Sub TexDateiErstellenAuswahlExam &apos;Angepasst 18.9.18
	AufgabeSpeichern()
	&apos;---------------
	&apos;In einem späteren Schritt sHeader und sFooter als Werte übergeben, welche aus einer separaten Tabelle ausgelesen werden...
	Dim iAufgabenDateiNummer As Integer
	Dim iHeaderDateiNummer As Integer
	Dim iFooterDateiNummer As Integer
    iAufgabenDateiNummer = FreeFile
    iHeaderDateiNummer = FreeFile
    iFooterDateiNummer = FreeFile
    
   	sWorkingDirectory = sfWorkingDirectory(&quot;aufgdbphys.odb&quot;)
	sTexDateienVerzeichnis = sfAufgabenverzeichnis
	
	&apos;Loesungen anzeigen: J/N
	oForm = ThisComponent.drawpage.getForms.GetByName(&quot;MainForm&quot;)
	oLsgJN = oForm.getbyName(&quot;LoesungenJN&quot;)
	oKurzLsgJN = oForm.getbyName(&quot;KurzLoesungenJN&quot;)
	oEnglish = oForm.getbyName(&quot;English&quot;)
	oLsgSchluss = oForm.getbyName(&quot;LsgAmSchluss&quot;)
	oPunkteZeigen = oForm.getbyName(&quot;PunkteZeigen&quot;)
	oPunkteTabelle = oForm.getbyName(&quot;PunkteTabelle&quot;)
	oPlatzNachAufgabe = oForm.getbyName(&quot;PlatzNachAufgabe&quot;)
	oCoverPage = oForm.getbyName(&quot;CoverPage&quot;)
	
	

	sTexDatei = &quot;auswahl_aufgaben&quot;
	
	If oCoverPage.State Then
		If oEnglish.State Then
			sTexHeader = &quot;headerfooter/examheaderen&quot;
		else
			sTexHeader = &quot;headerfooter/examheaderde&quot;		
		EndIf
	Else
		If oEnglish.State Then
			sTexHeader = &quot;headerfooter/examheaderenshort&quot;
		else
			sTexHeader = &quot;headerfooter/examheaderdeshort&quot;		
		EndIf	
	EndIf
	
	If oPunkteTabelle.State Then
		sTexFooter = &quot;headerfooter/examfootermit&quot;	
	else
		If oLsgSchluss.State Then
			sTexFooter = &quot;headerfooter/examfooterkompakt&quot;
		else
			sTexFooter = &quot;headerfooter/examfooterohne&quot;	
		EndIf
	EndIf
	
	
	sAufgabenDateiName = sWorkingDirectory &amp; sTexDateienVerzeichnis &amp; &quot;/&quot; &amp; sTexDatei &amp; &quot;.tex&quot;            &apos; Define file name
	sHeaderDateiName = sWorkingDirectory &amp; sTexDateienVerzeichnis &amp; &quot;/&quot; &amp; sTexHeader &amp; &quot;.txt&quot;            &apos; Define file name
	sFooterDateiName = sWorkingDirectory &amp; sTexDateienVerzeichnis &amp; &quot;/&quot; &amp; sTexFooter &amp; &quot;.txt&quot; &apos; Define file name
	&apos;---------------
	Dim DatabaseContext, DataSource, Connection, InteractionHandler, Statement, ResultSet As Object
	Dim iZaehler01,iZaehler02 As Integer
	Dim sID, sAufgabe, sPunkte As String 
	
    &apos;DatenbankKontext erstellen
    DatabaseContext = createUnoService(&quot;com.sun.star.sdb.DatabaseContext&quot;)
    &apos;Datenbank kontaktieren
    DataSource = DatabaseContext.getByName(&quot;aufgdbphys&quot;)
    &apos;Testen, ob Passwort benötigt wird
    If Not DataSource.IsPasswordRequired Then
    	Connection = DataSource.GetConnection(&quot;&quot;,&quot;&quot;)
    Else	
    	InteractionHandler = createUnoService(&quot;com.sun.star.sdb.InteractionHandler&quot;)
    	Connection = DataSource.ConnectWithCompletion(InteractionHandler)
    End If
    &apos;Abfrage erstellen
    Statement = Connection.createStatement()
   &apos;ResultSet = Statement.executeQuery(&quot; SELECT `aufgaben`.`Aufg_ID` AS `Aufg_ID`, `aufgaben`.`AutorID` AS `AutorID`, `aufgaben`.`SchwierigkeitsgradID` AS `SchwierigkeitsgradID`, `aufgaben`.`Untergebiet` AS `Untergebiet`, `aufgaben`.`Aufgabentext` AS `Aufgabentext`, `aufgaben`.`Lösung` AS `Lösung`, `aufgaben`.`LinkBild` AS `LinkBild`, `aufgaben`.`AuswahlDruck` AS `AuswahlDruck`, `aufgaben`.`Position` AS `Position` FROM `ph_aufg_db`.`aufgaben` `aufgaben` WHERE ( aufgaben.AuswahlDruck = true ) ORDER BY `position`&quot;)
   ResultSet = Statement.executeQuery(&quot;SELECT `Aufgaben`.`AufgID` AS `AufgID`, `Aufgaben`.`Fachgebiet` AS `Fachgebiet`, `Aufgaben`.`Author` AS `Author`, `Aufgaben`.`Schwierigkeitsgrad` AS `Schwierigkeitsgrad`, `Aufgaben`.`LetzteAenderung` AS `LetzteAenderung`, `Aufgaben`.`AufgabenText` AS `AufgabenText`, `Aufgaben`.`LinkZuBild` AS `LinkZuBild`, `Aufgaben`.`MC2` AS `MC2`, `Aufgaben`.`MC3` AS `MC3`, `Aufgaben`.`MC4` AS `MC4`, `Aufgaben`.`MC5` AS `MC5`, `Aufgaben`.`MC6` AS `MC6`, `Aufgaben`.`Loesung` AS `Loesung`, `Aufgaben`.`Auswahl` AS `Auswahl`, `Aufgaben`.`Position` AS `Position`, `Aufgaben`.`LoesungJN` AS `LoesungJN`, `Aufgaben`.`IDVarianten` AS `IDVarianten`, `Aufgaben`.`Kurzloesung` AS `Kurzloesung`, `Aufgaben`.`KurzloesungJN` AS `KurzloesungJN` FROM `Aufgaben` `Aufgaben` WHERE ( `Aufgaben`.`Auswahl` = True ) ORDER BY `Aufgaben`.`Position`, `Aufgaben`.`Fachgebiet`, `Aufgaben`.`Schwierigkeitsgrad`&quot;)   
   &apos;Dimension von ResultSet bestimmen:
   iZaehler01 = 0
   	&apos;- Stringarray mit ID und Aufgabe und evtl weiteren Angaben erstellen (zuerst mehrere 1-dim-Array und dann ein 2-dim-Array)
   	If Not IsNull(ResultSet) Then
   		While ResultSet.next
			iZaehler01 = iZaehler01 + 1
			&apos;MsgBox iZaehler01
		Wend
   	End If
   	
   	If iZaehler01 = 0 then
   		MsgBox &quot;Es wurden keine Aufgaben ausgewählt.&quot;
   		Exit Sub
   	End if	
   	&apos;Array Dimensionieren:
   	Dim sArrayDaten(iZaehler01 - 1,6) As String
   	
    &apos;ResultSet = Statement.executeQuery(&quot;SELECT `Aufgaben`.`AufgID` AS `AufgID`, `Aufgaben`.`Fachgebiet` AS `Fachgebiet`, `Aufgaben`.`Author` AS `Author`, `Aufgaben`.`Schwierigkeitsgrad` AS `Schwierigkeitsgrad`, `Aufgaben`.`LetzteAenderung` AS `LetzteAenderung`, `Aufgaben`.`AufgabenText` AS `AufgabenText`, `Aufgaben`.`LinkZuBild` AS `LinkZuBild`, `Aufgaben`.`MC2` AS `MC2`, `Aufgaben`.`MC3` AS `MC3`, `Aufgaben`.`MC4` AS `MC4`, `Aufgaben`.`MC5` AS `MC5`, `Aufgaben`.`MC6` AS `MC6`, `Aufgaben`.`Loesung` AS `Loesung`, `Aufgaben`.`Auswahl` AS `Auswahl`, `Aufgaben`.`Position` AS `Position`, `Aufgaben`.`LoesungJN` AS `LoesungJN`, `Aufgaben`.`IDVarianten` AS `IDVarianten`, `Aufgaben`.`Kurzloesung` AS `Kurzloesung`, `Aufgaben`.`KurzloesungJN` AS `KurzloesungJN` FROM `Aufgaben` `Aufgaben` WHERE ( `Aufgaben`.`Auswahl` = True )&quot;)
    ResultSet = Statement.executeQuery(&quot;SELECT &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;AufgID&quot;&quot; AS &quot;&quot;AufgID&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;Fachgebiet&quot;&quot; AS &quot;&quot;Fachgebiet&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;Author&quot;&quot; AS &quot;&quot;Author&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;Schwierigkeitsgrad&quot;&quot; AS &quot;&quot;Schwierigkeitsgrad&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;LetzteAenderung&quot;&quot; AS &quot;&quot;LetzteAenderung&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;AufgabenText&quot;&quot; AS &quot;&quot;AufgabenText&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;LinkZuBild&quot;&quot; AS &quot;&quot;LinkZuBild&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;MC2&quot;&quot; AS &quot;&quot;MC2&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;MC3&quot;&quot; AS &quot;&quot;MC3&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;MC4&quot;&quot; AS &quot;&quot;MC4&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;MC5&quot;&quot; AS &quot;&quot;MC5&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;MC6&quot;&quot; AS &quot;&quot;MC6&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;Loesung&quot;&quot; AS &quot;&quot;Loesung&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;Auswahl&quot;&quot; AS &quot;&quot;Auswahl&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;Position&quot;&quot; AS &quot;&quot;Position&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;LoesungJN&quot;&quot; AS &quot;&quot;LoesungJN&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;IDVarianten&quot;&quot; AS &quot;&quot;IDVarianten&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;Kurzloesung&quot;&quot; AS &quot;&quot;Kurzloesung&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;KurzloesungJN&quot;&quot; AS &quot;&quot;KurzloesungJN&quot;&quot;,&quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;PermanenteID&quot;&quot; AS &quot;&quot;PermanenteID&quot;&quot; ,&quot;&quot;Punkte&quot;&quot;.&quot;&quot;Punktzahl&quot;&quot; AS &quot;&quot;Punktzahl&quot;&quot; FROM &quot;&quot;Aufgaben&quot;&quot; INNER JOIN &quot;&quot;Punkte&quot;&quot; ON &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;PermanenteID&quot;&quot; = &quot;&quot;Punkte&quot;&quot;.&quot;&quot;AufgID&quot;&quot; WHERE ( &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;Auswahl&quot;&quot; = True ) ORDER BY &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;Position&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;Fachgebiet&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;Schwierigkeitsgrad&quot;&quot;&quot;)   
   	iZaehler02 = 0
   	If Not IsNull(ResultSet) Then
   		While ResultSet.next
			iZaehler02 = iZaehler02 + 1
			sID = ResultSet.getString(1)
			sAufgabe = ResultSet.getString(6)
			
			&apos;Umlaute ersetzen (unicode vs. ascii-Problematik)
			sAufgabe = Replace(sAufgabe, &quot;ö&quot;, &quot;\&quot;&quot;o&quot;)
			sAufgabe = Replace(sAufgabe, &quot;Ö&quot;, &quot;\&quot;&quot;O&quot;)
			sAufgabe = Replace(sAufgabe, &quot;ä&quot;, &quot;\&quot;&quot;a&quot;)
			sAufgabe = Replace(sAufgabe, &quot;Ä&quot;, &quot;\&quot;&quot;A&quot;)
			sAufgabe = Replace(sAufgabe, &quot;ü&quot;, &quot;\&quot;&quot;u&quot;)
			sAufgabe = Replace(sAufgabe, &quot;Ü&quot;, &quot;\&quot;&quot;U&quot;)
			
			sLoesung = ResultSet.getString(13)
			sLoesung = Replace(sLoesung, &quot;ö&quot;, &quot;\&quot;&quot;o&quot;)
			sLoesung = Replace(sLoesung, &quot;Ö&quot;, &quot;\&quot;&quot;O&quot;)
			sLoesung = Replace(sLoesung, &quot;ä&quot;, &quot;\&quot;&quot;a&quot;)
			sLoesung = Replace(sLoesung, &quot;Ä&quot;, &quot;\&quot;&quot;A&quot;)
			sLoesung = Replace(sLoesung, &quot;ü&quot;, &quot;\&quot;&quot;u&quot;)
			sLoesung = Replace(sLoesung, &quot;Ü&quot;, &quot;\&quot;&quot;U&quot;)
			
			sKurzLoesung = ResultSet.getString(18)
			sKurzLoesung = Replace(sKurzLoesung, &quot;ö&quot;, &quot;\&quot;&quot;o&quot;)
			sKurzLoesung = Replace(sKurzLoesung, &quot;Ö&quot;, &quot;\&quot;&quot;O&quot;)
			sKurzLoesung = Replace(sKurzLoesung, &quot;ä&quot;, &quot;\&quot;&quot;a&quot;)
			sKurzLoesung = Replace(sKurzLoesung, &quot;Ä&quot;, &quot;\&quot;&quot;A&quot;)
			sKurzLoesung = Replace(sKurzLoesung, &quot;ü&quot;, &quot;\&quot;&quot;u&quot;)
			sKurzLoesung = Replace(sKurzLoesung, &quot;Ü&quot;, &quot;\&quot;&quot;U&quot;)
			
			sPermanenteID = ResultSet.getString(20)
			sPunkte = ResultSet.getString(21)

			&apos;MsgBox sID &amp; chr(13) &amp; sAufgabe
			&apos;In Array schreiben:
			sArrayDaten(iZaehler02 - 1,0) = sID
			sArrayDaten(iZaehler02 - 1,1) = sAufgabe
			sArrayDaten(iZaehler02 - 1,3) = sLoesung
			sArrayDaten(iZaehler02 - 1,4) = sKurzLoesung
			sArrayDaten(iZaehler02 - 1,5) = sPermanenteID
			sArrayDaten(iZaehler02 - 1,6) = sPunkte
		Wend
   	End If
   	
   	&apos;Bei Aufgabenstring korrekten Pfad einfügen:
   	for i = 0 to iZaehler02 - 1
   		&apos;String mit korrektem Pfad
   		&apos;sAngepassterString = PosUndReplaceVonMystringInSearchstring(sArrayDaten(i,1), &quot;\includegraphics&quot;, sWorkingDirectory &amp; sTexDateienVerzeichnis &amp; &quot;/&quot; &amp; sArrayDaten(i,0) &amp; &quot;/&quot;)
   		sAngepassterString = sfAbsPfadBildDatei(sArrayDaten(i,1), sWorkingDirectory &amp; sTexDateienVerzeichnis &amp; &quot;/&quot; &amp; sArrayDaten(i,0) &amp; &quot;/&quot;, &quot;\includegraphics&quot;)
   		
   		&apos;In Array schreiben:
   		sArrayDaten(i,2) = sAngepassterString
   		&apos;MsgBox sArrayDaten(i,0) &amp; chr(13) &amp; chr(13) &amp; sArrayDaten(i,1) &amp; chr(13) &amp; chr(13) &amp; sArrayDaten(i,2) 
   		
   		&apos;Das gleiche für die Lösungen (nur schreibe ich es nicht mehr in eine neue Spalte des Arrays):
   		&apos;sAngepassterString2 = PosUndReplaceVonMystringInSearchstring(sArrayDaten(i,3), &quot;\includegraphics&quot;, sWorkingDirectory &amp; sTexDateienVerzeichnis &amp; &quot;/&quot; &amp; sArrayDaten(i,0) &amp; &quot;/&quot;)
   		sAngepassterString2 = sfAbsPfadBildDatei(sArrayDaten(i,3), sWorkingDirectory &amp; sTexDateienVerzeichnis &amp; &quot;/&quot; &amp; sArrayDaten(i,0) &amp; &quot;/&quot;, &quot;\includegraphics&quot;)
   		
   		sArrayDaten(i,3) = sAngepassterString2
   		
   		&apos;Das gleiche für die Kurzlösungen (nur schreibe ich es nicht mehr in eine neue Spalte des Arrays):
   		&apos;sAngepassterStringKL = PosUndReplaceVonMystringInSearchstring(sArrayDaten(i,4), &quot;\includegraphics&quot;, sWorkingDirectory &amp; sTexDateienVerzeichnis &amp; &quot;/&quot; &amp; sArrayDaten(i,0) &amp; &quot;/&quot;)
   		sAngepassterStringKL = sfAbsPfadBildDatei(sArrayDaten(i,4), sWorkingDirectory &amp; sTexDateienVerzeichnis &amp; &quot;/&quot; &amp; sArrayDaten(i,0) &amp; &quot;/&quot;, &quot;\includegraphics&quot;)
   		
   		sArrayDaten(i,4) = sAngepassterStringKL
   	next i
   	   
	&apos;Datei erstellen_
	
	&apos;Titel, Klasse und Datum abfragen
	&apos;27.9.18: Latex-Fehler abgefangen, wenn man nichts eintippt
	sTitel = InputBox(&quot;Titel der Prüfung&quot;)
	If sTitel = &quot;&quot; Then
		If oEnglish.State Then
			sTitel = &quot;Title&quot;
		Else
			sTitel = &quot;Titel&quot;
		EndIf
	Else
			&apos;Umlaute ersetzen (unicode vs. ascii-Problematik)
			sTitel = Replace(sTitel, &quot;ö&quot;, &quot;\&quot;&quot;o&quot;)
			sTitel = Replace(sTitel, &quot;Ö&quot;, &quot;\&quot;&quot;O&quot;)
			sTitel = Replace(sTitel, &quot;ä&quot;, &quot;\&quot;&quot;a&quot;)
			sTitel = Replace(sTitel, &quot;Ä&quot;, &quot;\&quot;&quot;A&quot;)
			sTitel = Replace(sTitel, &quot;ü&quot;, &quot;\&quot;&quot;u&quot;)
			sTitel = Replace(sTitel, &quot;Ü&quot;, &quot;\&quot;&quot;U&quot;)	
	End If
	sDatum = InputBox(&quot;Datum&quot;)
	If sDatum = &quot;&quot; Then
		sDatum = DATE()
	End If
	sKlasse = InputBox(&quot;Klasse&quot;)
	If sKlasse = &quot;&quot; Then
		If oEnglish.State Then
			sKlasse = &quot;Class&quot;
		Else
			sKlasse = &quot;Klasse&quot;
		EndIf
	Else
		&apos;Umlaute ersetzen (unicode vs. ascii-Problematik)
		sKlasse = Replace(sKlasse, &quot;ö&quot;, &quot;\&quot;&quot;o&quot;)
		sKlasse = Replace(sKlasse, &quot;Ö&quot;, &quot;\&quot;&quot;O&quot;)
		sKlasse = Replace(sKlasse, &quot;ä&quot;, &quot;\&quot;&quot;a&quot;)
		sKlasse = Replace(sKlasse, &quot;Ä&quot;, &quot;\&quot;&quot;A&quot;)
		sKlasse = Replace(sKlasse, &quot;ü&quot;, &quot;\&quot;&quot;u&quot;)
		sKlasse = Replace(sKlasse, &quot;Ü&quot;, &quot;\&quot;&quot;U&quot;)	
	End If
	
	&apos; Header mit der Klasse beginnen
	If oLsgJN.State + oKurzLsgJN.State = 0 Then
		TexHeader = TexHeader &amp; &quot;\documentclass[noanswers, 10pt, addpoints]{exam}&quot;
	else
		TexHeader = TexHeader &amp; &quot;\documentclass[answers, 10pt, addpoints]{exam}&quot;
	EndIf
	
	&apos;Titel, Datum und Klasse im ersten Teil der Praeambel eingeben
	TexHeader = TexHeader &amp; chr(13) &amp; &quot;\header{\thetitle}{P, &quot; &amp; sKlasse &amp; &quot;, KRW}{&quot;
	If oEnglish.State Then
		TexHeader = TexHeader &amp; &quot;Page \thepage\ of \numpages}&quot; &amp; chr(13)
	Else
		TexHeader = TexHeader &amp; &quot;Seite \thepage\ von \numpages}&quot; &amp; chr(13)
	EndIf
	TexHeader = TexHeader &amp;&quot;\coverheader{}{P, &quot; &amp; sKlasse &amp;&quot;, KRW}{&quot; &amp; sDatum &amp; &quot;}&quot;_
		&amp;&quot;\usepackage{titling}&quot; &amp; chr(13) &amp; &quot;\title{&quot; &amp; sTitel &amp; &quot;}&quot; &amp; chr(13)
	
	&apos;Headerdatei in String auslesen
	TexHeader = TexHeader &amp; sfDateiInhalt(sHeaderDateiName,iHeaderDateiNummer)
	
	
	&apos;Footerdatei in String auslesen
	TexFooter = sfDateiInhalt(sFooterDateiName,iFooterDateiNummer)
	
	&apos;oKurzLsgJN
	
    Open sAufgabenDateiName For Output As #iAufgabenDateiNummer
	   	Print #iAufgabenDateiNummer, TexHeader &amp; chr(13) &amp; chr(13) 
	   	If oEnglish.State = 1 then
	   		sLsg = &quot;Solutions: &quot;
	   	else
	   		sLsg = &quot;L\&quot;&quot;osungen: &quot;
	   	endif 
	   		
	   	for i = 0 to iZaehler02 - 1
	   		&apos;String mit korrektem Pfad
	   		If oPunkteZeigen.State = 1 then 
	   			sPunktzahl = &quot;[&quot; &amp; sArrayDaten(i,6) &amp; &quot;]&quot;
	   		else 
	   			sPunktzahl = &quot; &quot;
	   		endif	
	   			if oLsgJN.State = 1 then
	   				if oKurzLsgJN.State = 1 then
	   					Print #iAufgabenDateiNummer, &quot;\question&quot; &amp; sPunktzahl &amp; sArrayDaten(i,2) &amp; &quot;\begin{solutionorgrid}[\stretch{&quot; &amp; oPlatzNachAufgabe.State &amp; &quot;}]&quot; &amp; chr(13) &amp; sArrayDaten(i,4) &amp; chr(13) &amp; chr(13)  &amp; sArrayDaten(i,3)&amp; chr(13) &amp; &quot;\end{solutionorgrid}&quot; &amp; chr(13) &amp; chr(13) &apos;MsgBox &quot;Lösungen werden angezeigt&quot;
	   				else
						Print #iAufgabenDateiNummer, &quot;\question&quot; &amp; sPunktzahl &amp; sArrayDaten(i,2) &amp; chr(13)  &amp; &quot;\begin{solutionorgrid}[\stretch{&quot; &amp; oPlatzNachAufgabe.State &amp; &quot;}]&quot; &amp; chr(13) &amp; sArrayDaten(i,3) &amp; chr(13)&amp; &quot;\end{solutionorgrid}&quot; &amp; chr(13) &amp; chr(13)&apos;MsgBox &quot;Lösungen werden angezeigt&quot;
					end if	
				else
						Print #iAufgabenDateiNummer,&quot;\question&quot; &amp; sPunktzahl &amp; sArrayDaten(i,2) &amp; chr(13)  &amp; &quot;\begin{solutionorgrid}[\stretch{&quot; &amp; oPlatzNachAufgabe.State &amp; &quot;}]&quot; &amp; chr(13) &amp; sArrayDaten(i,4) &amp; chr(13) &amp; &quot;\end{solutionorgrid}&quot; &amp; chr(13) &amp; chr(13)&apos;MsgBox &quot;Lösungen werden angezeigt&quot;
				end if
			sLsg = sLsg &amp; i+1 &amp; &quot;. &quot; &amp; sArrayDaten(i,4) &amp; &quot;; &quot;
   		next i
		If oLsgSchluss.State = 1 Then
	   		Print #iAufgabenDateiNummer, chr(13) &amp; chr(13) &amp; &quot;\end{questions}&quot; &amp; chr(13) &amp; sLsg &amp; chr(13) &amp; chr(13) &amp; &quot;\end{document}&quot;    &apos; Save line
		Else
   			Print #iAufgabenDateiNummer, chr(13) &amp; chr(13) &amp; TexFooter     &apos; Save line	
		EndIf
	Close #iAufgabenDateiNummer

	PdflatexKompilieren(sWorkingDirectory &amp; sTexDateienVerzeichnis, sTexDatei)
	PdflatexKompilieren(sWorkingDirectory &amp; sTexDateienVerzeichnis, sTexDatei)
	PdfAnzeigen(sWorkingDirectory &amp; sTexDateienVerzeichnis, sTexDatei)
	PdflatexHilfsdateienLoeschen(sWorkingDirectory &amp; sTexDateienVerzeichnis, sTexDatei)
End Sub

Sub PunkteAendern
&apos; Erstellt am 27.9.18: Erlaubt es die Punktzahl einer Aufgabe zu aendern. Diese ist
&apos; in der Tabelle Punkte gespeichert, damit die Bepunktung nicht aendert, wenn die DB
&apos; zusammengezogen wird. Das Feld &quot;Punktzahl&quot; auf dem Formular liegt in einem SubForm zu
&apos; MainForm, welches ueber einen InnerJoin die Punktzahl der aktuellen Aufgabe angibt.
	saktuelleID = sfAusgabeID()
	If saktuelleID = &quot;&quot; Then
		AufgabeSpeichern
	EndIf
	Dim DatabaseContext, DataSource, Connection, InteractionHandler, Statement, ResultSet As Object
	Dim iZaehler01,iZaehler02 As Integer
	Dim sID, sAufgabe As String 
	
    &apos;DatenbankKontext erstellen
    DatabaseContext = createUnoService(&quot;com.sun.star.sdb.DatabaseContext&quot;)
    &apos;Datenbank kontaktieren
    DataSource = DatabaseContext.getByName(&quot;aufgdbphys&quot;)
    &apos;Testen, ob Passwort benötigt wird
    If Not DataSource.IsPasswordRequired Then
    	Connection = DataSource.GetConnection(&quot;&quot;,&quot;&quot;)
    Else	
    	InteractionHandler = createUnoService(&quot;com.sun.star.sdb.InteractionHandler&quot;)
    	Connection = DataSource.ConnectWithCompletion(InteractionHandler)
    End If
    &apos;Abfrage erstellen
    Statement = Connection.createStatement()
   ResultSet = Statement.executeQuery(&quot;SELECT &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;PermanenteID&quot;&quot; AS &quot;&quot;PermanenteID&quot;&quot;, &quot;&quot;Aufgaben&quot;&quot;.&quot;&quot;AufgID&quot;&quot; AS &quot;&quot;AufgID&quot;&quot;  FROM &quot;&quot;Aufgaben&quot;&quot; WHERE ( &quot;&quot;AufgID&quot;&quot; = &quot; &amp; saktuelleID &amp; &quot;)&quot;)   
	If Not IsNull(ResultSet) Then
   		While ResultSet.next
	   		sPermanenteID = ResultSet.getString(1)
	   		If sPermanenteID = &quot;&quot; THEN
				MsgBox &quot;Bitte zuerst perm. ID setzen&quot;
	   		Else
		   		sPunktzahl = InputBox(&quot;Geben Sie bitte die neue Punktzahl ein: &quot;)
		   		If sPunktzahl = &quot;&quot; Then 
			   		Exit Sub
		   		End if
				Statement = Connection.createStatement()
			 	sUpdate = &quot;UPDATE &quot;&quot;Punkte&quot;&quot; SET &quot;&quot;Punktzahl&quot;&quot; = &apos;&quot; &amp; sPunktzahl &amp; &quot;&apos; WHERE &quot;&quot;AufgID&quot;&quot; = &apos;&quot; &amp; sPermanenteID &amp; &quot;&apos;&quot;
			 	Statement.executeUpdate(sUpdate)
		 		DatenbankAktualisieren
	 		EndIf
   		Wend
   	EndIf	
End Sub


</script:module>